{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducers.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/BoardAlgo.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","components/securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","sent","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","console","log","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","username","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSeqeuence","intialState","middleware","thunk","REDUX_DEVTOOL","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_task_prop","ProjectBoard_ProjectTask_ProjectTask","toDoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","role","ProjectBoard_Backlog","BoardAlgo","AddProjectTask","dueDate","newProjectTask","addProjectTask","projectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","fullName","password","confirmPassword","newUser","createNewUser","Login","Loginrequest","loginUser","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"8TAKaA,EAAgB,SAACC,EAASC,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE7BC,IAAMC,KAAK,eAAgBf,GAFE,OAAAW,EAAAK,KAG/Cf,EAAQgB,KAAK,cACbR,EAAS,CACPS,KCPoB,aDQpBC,QAAS,KANoCR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAS/CF,EAAS,CACPS,KCZoB,aDapBC,QAASR,EAAAS,GAAIC,SAASC,OAXuB,yBAAAX,EAAAY,SAAAf,EAAAgB,KAAA,YAAtB,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,IECvBC,6MACJC,cAAgB,SAAAC,GACdC,EAAKC,MAAMC,cAAcH,4EAElB,IACC9B,EAAYwB,KAAKQ,MAAjBhC,QAER,OADAkC,QAAQC,IAAInC,GAGVoC,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,gCACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,SACbF,EAAA9B,EAAA+B,cAAA,QAAMC,UAAU,WAAWtC,EAAQuC,oBAErCH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,2BACbF,EAAA9B,EAAA+B,cAAA,UAAKrC,EAAQwC,aACbJ,EAAA9B,EAAA+B,cAAA,SAAIrC,EAAQyC,cAEdL,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,8BACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,cACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmB5C,EAAQuC,oBACjCH,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBACZF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,6BAAb,oBAGJF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAE,kBAAAC,OAAoB5C,EAAQuC,oBAClCH,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,0BACZF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,mBAAb,yBAIJF,EAAA9B,EAAA+B,cAAA,MACEC,UAAU,yBACVO,QAASrB,KAAKK,cAAciB,KAC1BtB,KACAxB,EAAQuC,oBAGVH,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,2BAAb,+BAvCQS,aAoDXC,cACb,KACA,CAAEf,cFdyB,SAAAH,GAAE,sBAAAmB,EAAA9C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA2C,EAAMzC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,WAC7BuC,OAAOC,QAAQ,qCADc,CAAAF,EAAAtC,KAAA,eAAAsC,EAAAtC,KAAA,EAEbC,IAAMwC,OAAN,gBAAAV,OAA6Bd,IAFhB,OAAAqB,EAAAnC,KAI/BP,EAAS,CACPS,KCrCwB,iBDsCxBC,QAASW,IANoB,wBAAAqB,EAAA5B,SAAA2B,EAAA1B,SAAJ,gBAAA+B,GAAA,OAAAN,EAAAvB,MAAAF,KAAAG,YAAA,KEYhBqB,CAGbpB,GChDa4B,EAVa,WAC1B,OACEpB,EAAA9B,EAAA+B,cAACD,EAAA9B,EAAMmD,SAAP,KACErB,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAG,cAAcL,UAAU,uBAAjC,sBCGAoB,8LAEFlC,KAAKQ,MAAM2B,+CAEJ,IACCC,EAAapC,KAAKQ,MAAMhC,QAAxB4D,SACR,OACExB,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,YACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,YACAF,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAACwB,EAAD,MACAzB,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAAA,WACCuB,EAASE,IAAI,SAAA9D,GAAO,OACnBoC,EAAA9B,EAAA+B,cAAC0B,EAAD,CAAaC,IAAKhE,EAAQ8B,GAAI9B,QAASA,iBAjB/B+C,aAqCTC,cAJS,SAAAiB,GAAK,MAAK,CAChCjE,QAASiE,EAAMjE,UAKf,CACE2D,YJ3BuB,iCAAAO,EAAA/D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAM,SAAA4D,EAAM1D,GAAN,IAAA2D,EAAA,OAAA/D,EAAAC,EAAAI,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EACbC,IAAMwD,IAAI,oBADG,OACzBF,EADyBC,EAAArD,KAG/BP,EAAS,CACPS,KCpBwB,eDqBxBC,QAASiD,EAAI9C,OALgB,wBAAA+C,EAAA9C,SAAA4C,EAAA3C,SAAN,gBAAA+C,GAAA,OAAAL,EAAAxC,MAAAF,KAAAG,YAAA,KIwBZqB,CAKbU,oBCzCac,EARK,SAAAC,GACdA,EACF3D,IAAM4D,SAASC,QAAQC,OAAvB,cAAiDH,SAE1C3D,IAAM4D,SAASC,QAAQC,OAAvB,eCyCEC,EAAS,kBAAM,SAAApE,GAC1BqE,aAAaC,WAAW,YACxBP,GAAY,GACZ/D,EAAS,CACPS,KL7B4B,mBK8B5BC,QAAS,OC9CP6D,mLAEFxD,KAAKQ,MAAM6C,SACXzB,OAAO6B,SAASC,KAAO,qCAGhB,IAkDHC,EAlDGC,EACsB5D,KAAKQ,MAAMqD,SAAhCC,EADDF,EACCE,WAAYC,EADbH,EACaG,KAEdC,EACJpD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,2BAA2BR,GAAG,cAC3CM,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,sBACZF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,YACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAA9B,eAMJP,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,sBACZF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,YACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAC5BP,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,4BACZiD,EAAKE,WAGVrD,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,YACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CACEJ,UAAU,WACVK,GAAG,UACHE,QAASrB,KAAKqD,OAAO/B,KAAKtB,OAH5B,aAYFkE,EACJtD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,2BAA2BR,GAAG,cAC3CM,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,sBACZF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,YACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,WAA9B,YAIFP,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,YACZF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAA9B,YAgBR,OALEwC,EADEG,GAAcC,EACFC,EAEAE,EAMdtD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,uDACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMJ,UAAU,eAAeK,GAAG,KAAlC,oCAGAP,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,iBACVpB,KAAK,SACLyE,cAAY,WACZC,cAAY,eAEZxD,EAAA9B,EAAA+B,cAAA,QAAMC,UAAU,yBAGjB6C,WAjFUpC,aAgGNC,cAJS,SAAAiB,GAAK,MAAK,CAChCoB,SAAUpB,EAAMoB,WAKhB,CAAER,UAFW7B,CAGbgC,mECnGIa,cACJ,SAAAA,IAAc,IAAA9D,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAAqE,IACZ9D,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAA0F,GAAAI,KAAAzE,QACKyC,MAAQ,CACXzB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyD,WAAY,GACZC,SAAU,GACVC,OAAQ,IAGVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAZJA,yFAgBYyE,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,0CAI7BM,GAKPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAGnCJ,GACPA,EAAEK,iBACF,IAAMC,EAAa,CACjBxE,YAAahB,KAAKyC,MAAMzB,YACxBD,kBAAmBf,KAAKyC,MAAM1B,kBAC9BE,YAAajB,KAAKyC,MAAMxB,YACxByD,WAAY1E,KAAKyC,MAAMiC,WACvBC,SAAU3E,KAAKyC,MAAMkC,UAEvB3E,KAAKQ,MAAMjC,cAAciH,EAAYxF,KAAKQ,MAAM/B,0CAGzC,IACCmG,EAAW5E,KAAKyC,MAAhBmC,OACR,OACEhE,EAAA9B,EAAA+B,cAAA,WACED,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OAGLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO5D,cAEvB2E,YAAY,eACZN,KAAK,cACLC,MAAOtF,KAAKyC,MAAMzB,YAClB6D,SAAU7E,KAAK6E,WAKhBD,EAAO5D,aACNJ,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO5D,cAIdJ,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO7D,oBAEvB4E,YAAY,oBACZN,KAAK,oBACLC,MAAOtF,KAAKyC,MAAM1B,kBAClB8D,SAAU7E,KAAK6E,WAEhBD,EAAO7D,mBACNH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO7D,oBAKdH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,YACEC,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO3D,cAEvB0E,YAAY,sBACZN,KAAK,cACLC,MAAOtF,KAAKyC,MAAMxB,YAClB4D,SAAU7E,KAAK6E,WAEhBD,EAAO3D,aACNL,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO3D,cAIdL,EAAA9B,EAAA+B,cAAA,wBACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,aACLC,MAAOtF,KAAKyC,MAAMiC,WAClBG,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,gCACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,WACLC,MAAOtF,KAAKyC,MAAMkC,SAClBE,SAAU7E,KAAK6E,YAInBjE,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,SACLoB,UAAU,gDArILS,aA2JVC,cAJS,SAAAiB,GAAK,MAAK,CAChCmC,OAAQnC,EAAMmC,SAKd,CAAErG,iBAFWiD,CAGb6C,mBCjKIuB,EAAe,WCDfA,EAAe,CACnBxD,SAAU,GACV5D,QAAS,ICELoH,EAAe,CACnBC,cAAe,GACfC,aAAc,ICNVF,EAAe,CACnB9B,YAAY,EACZC,KAAM,ICEOgC,cAAgB,CAE7BnB,OJHa,WAAuC,IAA9BnC,EAA8BtC,UAAA6F,OAAA,QAAAC,IAAA9F,UAAA,GAAAA,UAAA,GAAtByF,EAAcM,EAAQ/F,UAAA6F,OAAA,EAAA7F,UAAA,QAAA8F,EACpD,OAAQC,EAAOxG,MACb,IRJsB,aQKpB,OAAOwG,EAAOvG,QAEhB,QACE,OAAO8C,IIFXjE,QHFa,WAAuC,IAA9BiE,EAA8BtC,UAAA6F,OAAA,QAAAC,IAAA9F,UAAA,GAAAA,UAAA,GAAtByF,EAAcM,EAAQ/F,UAAA6F,OAAA,EAAA7F,UAAA,QAAA8F,EACpD,OAAQC,EAAOxG,MACb,ITHwB,eSItB,OAAOf,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEL,SAAU8D,EAAOvG,UAGrB,ITLuB,cSMrB,OAAOhB,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEjE,QAAS0H,EAAOvG,UAGpB,ITP0B,iBSQxB,OAAOhB,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEL,SAAUK,EAAML,SAASgE,OACvB,SAAA5H,GAAO,OAAIA,EAAQuC,oBAAsBmF,EAAOvG,YAItD,QACE,OAAO8C,IGpBX4D,QFCa,WAAuC,IAA9B5D,EAA8BtC,UAAA6F,OAAA,QAAAC,IAAA9F,UAAA,GAAAA,UAAA,GAAtByF,EAAcM,EAAQ/F,UAAA6F,OAAA,EAAA7F,UAAA,QAAA8F,EACpD,OAAQC,EAAOxG,MACb,IVMuB,cULrB,OAAOf,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEoD,cAAeK,EAAOvG,UAG1B,IVD4B,mBUE1B,OAAOhB,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEqD,aAAcI,EAAOvG,UAGzB,IVL+B,sBUM7B,OAAOhB,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEoD,cAAepD,EAAMoD,cAAcO,OACjC,SAAAN,GAAY,OAAIA,EAAaQ,mBAAqBJ,EAAOvG,YAI/D,QACE,OAAO8C,IEvBXoB,SDIa,WAAuC,IARzBlE,EAQL8C,EAA8BtC,UAAA6F,OAAA,QAAAC,IAAA9F,UAAA,GAAAA,UAAA,GAAtByF,EAAcM,EAAQ/F,UAAA6F,OAAA,EAAA7F,UAAA,QAAA8F,EACpD,OAAQC,EAAOxG,MACb,IXK4B,mBWJ1B,OAAOf,OAAAwH,EAAA,EAAAxH,CAAA,GACF8D,EADL,CAEEqB,YAbqBnE,EAaYuG,EAAOvG,UAZ1CA,GAaEoE,KAAMmC,EAAOvG,UAGjB,QACE,OAAO8C,MErBP8D,EAAc,GACdC,EAAa,CAACC,KAGhBC,EACF9E,OAAO+E,8BAAgC/E,OAAO+E,+BAmBjCC,EAjBXhF,OAAOiF,UAAUC,UAAUC,SAAS,WAAaL,EAC3CM,YACNC,EACAV,EACAW,YACEC,IAAejH,WAAf,EAAmBsG,GACnBE,IAIIM,YACNC,EACAV,EACAW,YAAQC,IAAejH,WAAf,EAAmBsG,KClBzBY,cAEJ,SAAAA,IAAc,IAAA7G,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAAoH,IACZ7G,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAAyI,GAAA3C,KAAAzE,QACKyC,MAAQ,CACXnC,GAAI,GACJU,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyD,WAAY,GACZC,SAAU,GACVC,OAAQ,IAGVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAbJA,yFAiBYyE,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,SAFD,IAAAyC,EAW/BrC,EAAUxG,QANZ8B,EALiC+G,EAKjC/G,GACAU,EANiCqG,EAMjCrG,YACAD,EAPiCsG,EAOjCtG,kBACAE,EARiCoG,EAQjCpG,YACAyD,EATiC2C,EASjC3C,WACAC,EAViC0C,EAUjC1C,SAGF3E,KAAKiF,SAAS,CACZ3E,KACAU,cACAD,oBACAE,cACAyD,aACAC,yDAIgB,IACVrE,EAAON,KAAKQ,MAAM8G,MAAMC,OAAxBjH,GACRN,KAAKQ,MAAMgH,WAAWlH,EAAIN,KAAKQ,MAAM/B,0CAE9ByG,GACPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAGnCJ,GACPA,EAAEK,iBACF,IAAMkC,EAAgB,CACpBnH,GAAIN,KAAKyC,MAAMnC,GACfU,YAAahB,KAAKyC,MAAMzB,YACxBD,kBAAmBf,KAAKyC,MAAM1B,kBAC9BE,YAAajB,KAAKyC,MAAMxB,YACxByD,WAAY1E,KAAKyC,MAAMiC,WACvBC,SAAU3E,KAAKyC,MAAMkC,UAEvB3E,KAAKQ,MAAMjC,cAAckJ,EAAezH,KAAKQ,MAAM/B,0CAG5C,IACCmG,EAAW5E,KAAKyC,MAAhBmC,OACR,OACEhE,EAAA9B,EAAA+B,cAAA,WACED,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OAGLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO5D,cAEvB2E,YAAY,eACZN,KAAK,cACLC,MAAOtF,KAAKyC,MAAMzB,YAClB6D,SAAU7E,KAAK6E,WAKhBD,EAAO5D,aACNJ,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO5D,cAIdJ,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO7D,oBAEvB4E,YAAY,oBACZN,KAAK,oBACLC,MAAOtF,KAAKyC,MAAM1B,kBAClB8D,SAAU7E,KAAK6E,SACf6C,UAAQ,IAET9C,EAAO7D,mBACNH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO7D,oBAKdH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,YACEC,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO3D,cAEvB0E,YAAY,sBACZN,KAAK,cACLC,MAAOtF,KAAKyC,MAAMxB,YAClB4D,SAAU7E,KAAK6E,WAEhBD,EAAO3D,aACNL,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO3D,cAIdL,EAAA9B,EAAA+B,cAAA,wBACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,aACLC,MAAOtF,KAAKyC,MAAMiC,WAClBG,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,gCACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,WACLC,MAAOtF,KAAKyC,MAAMkC,SAClBE,SAAU7E,KAAK6E,YAInBjE,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,SACLoB,UAAU,gDA1JFS,aAmLbC,cALS,SAAAiB,GAAK,MAAK,CAChCjE,QAASiE,EAAMjE,QAAQA,QACvBoG,OAAQnC,EAAMmC,SAKd,CAAE4C,Wf3JsB,SAAClH,EAAI7B,GAAL,sBAAAkJ,EAAAhJ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAA6I,EAAM3I,GAAN,IAAA2D,EAAA,OAAA/D,EAAAC,EAAAI,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,cAAAwI,EAAAzI,KAAA,EAAAyI,EAAAxI,KAAA,EAErBC,IAAMwD,IAAN,gBAAA1B,OAA0Bd,IAFL,OAEjCsC,EAFiCiF,EAAArI,KAIvCP,EAAS,CACPS,KC3BqB,cD4BrBC,QAASiD,EAAI9C,OANwB+H,EAAAxI,KAAA,gBAAAwI,EAAAzI,KAAA,EAAAyI,EAAAjI,GAAAiI,EAAA,SASvCpJ,EAAQgB,KAAK,cAT0B,yBAAAoI,EAAA9H,SAAA6H,EAAA5H,KAAA,YAAjB,gBAAA8H,GAAA,OAAAH,EAAAzH,MAAAF,KAAAG,YAAA,Ie2JV5B,iBAFDiD,CAGb4F,GCtLIW,yLACUC,EAAYC,GACxBjI,KAAKQ,MAAM0H,kBAAkBF,EAAYC,oCAGlC,IAEHE,EACAC,EAFItC,EAAiB9F,KAAKQ,MAAtBsF,aAiBR,OAb6B,GAAzBA,EAAauC,WACfD,EAAgB,uBAChBD,EAAiB,QAGU,GAAzBrC,EAAauC,WACfD,EAAgB,wBAChBD,EAAiB,UAEU,GAAzBrC,EAAauC,WACfD,EAAgB,qBAChBD,EAAiB,OAGjBvH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,sBACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAS,4BAAAM,OAA8BgH,IAA5C,OACOtC,EAAaQ,iBADpB,iBACoD6B,GAEpDvH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,sBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,cAAcgF,EAAawC,SACzC1H,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,4BACVgF,EAAayC,oBAEhB3H,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CACEC,GAAE,sBAAAC,OAAwB0E,EAAa/E,kBAArC,KAAAK,OACA0E,EAAaQ,kBAEfxF,UAAU,mBAJZ,iBASAF,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,sBACVO,QAASrB,KAAKK,cAAciB,KAC1BtB,KACA8F,EAAa/E,kBACb+E,EAAaQ,mBALjB,mBA1CgB/E,aA4DXC,eACb,KACA,CAAE0G,kBCc6B,SAACF,EAAYC,GAAb,sBAAAO,EAAA7J,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAuB,SAAA0J,EAAMxJ,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAwJ,GAAA,cAAAA,EAAAtJ,KAAAsJ,EAAArJ,MAAA,WAClDuC,OAAOC,QAAP,+BAAAT,OAA8C6G,EAA9C,mBADkD,CAAAS,EAAArJ,KAAA,eAAAqJ,EAAArJ,KAAA,EAE9CC,IAAMwC,OAAN,gBAAAV,OAA6B4G,EAA7B,KAAA5G,OAA2C6G,IAFG,OAGpDhJ,EAAS,CACPS,KhBlE6B,sBgBmE7BC,QAASsI,IALyC,wBAAAS,EAAA3I,SAAA0I,EAAAzI,SAAvB,gBAAA2I,GAAA,OAAAH,EAAAtI,MAAAF,KAAAG,YAAA,KDhBlBqB,CAGbuG,IEXaa,oLA3CX,IAXO,IAGDC,EAFwB7I,KAAKQ,MAA3BsI,kBAEwBxG,IAAI,SAAAwD,GAAY,OAC9ClF,EAAA9B,EAAA+B,cAACkI,GAAD,CAAavG,IAAKsD,EAAaxF,GAAIwF,aAAcA,MAG/CkD,EAAY,GACZC,EAAkB,GAClBC,EAAY,GAEPC,EAAI,EAAGA,EAAIN,EAAM7C,OAAQmD,IACU,SAAtCN,EAAMM,GAAG3I,MAAMsF,aAAasD,QAC9BJ,EAAUvJ,KAAKoJ,EAAMM,IAEmB,eAAtCN,EAAMM,GAAG3I,MAAMsF,aAAasD,QAC9BH,EAAgBxJ,KAAKoJ,EAAMM,IAEa,QAAtCN,EAAMM,GAAG3I,MAAMsF,aAAasD,QAC9BF,EAAUzJ,KAAKoJ,EAAMM,IAGzB,OACEvI,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,YACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,yBACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,uCACbF,EAAA9B,EAAA+B,cAAA,qBAGHmI,GAEHpI,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,YACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,yBACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,qCACbF,EAAA9B,EAAA+B,cAAA,2BAGHoI,GAEHrI,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,YACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,yBACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,qCACbF,EAAA9B,EAAA+B,cAAA,oBAGHqI,YAhDS3H,aCMhB8H,eACJ,SAAAA,IAAc,IAAA9I,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAAqJ,IACZ9I,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAA0K,GAAA5E,KAAAzE,QACKyC,MAAQ,CACXmC,OAAQ,IAHErE,yFAOYyE,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,qDAIlB,IACVtE,EAAON,KAAKQ,MAAM8G,MAAMC,OAAxBjH,GACRN,KAAKQ,MAAM8I,WAAWhJ,oCAGf,IAKHiJ,EAJIjJ,EAAON,KAAKQ,MAAM8G,MAAMC,OAAxBjH,GACAuF,EAAkB7F,KAAKQ,MAAM6F,QAA7BR,cAOR,OAFA0D,EChCqB,SAAC3E,EAAQiB,GAChC,OAAIA,EAAcG,OAAS,EACrBpB,EAAO7D,kBAEPH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,iCAAiC0I,KAAK,SAClD5E,EAAO7D,mBAKVH,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,+BAA+B0I,KAAK,SAAnD,kCAMG5I,EAAA9B,EAAA+B,cAAC4I,GAAD,CAASX,kBAAmBjD,IDgBpB6D,CAJI1J,KAAKyC,MAAhBmC,OAIyBiB,GAG/BjF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAE,mBAAAC,OAAqBd,GAAMQ,UAAU,wBAC3CF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,sBAAb,yBAEFF,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAAA,WACC0I,UAnCkBhI,aAoDZC,eALS,SAAAiB,GAAK,MAAK,CAChC4D,QAAS5D,EAAM4D,QACfzB,OAAQnC,EAAMmC,SAKd,CAAE0E,WFlCsB,SAAAtB,GAAU,sBAAAtF,EAAA/D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA4D,EAAM1D,GAAN,IAAA2D,EAAA,OAAA/D,EAAAC,EAAAI,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAElBC,IAAMwD,IAAN,gBAAA1B,OAA0B4G,IAFR,OAE9BpF,EAF8BC,EAAArD,KAGpCP,EAAS,CACPS,KhBdqB,cgBerBC,QAASiD,EAAI9C,OALqB+C,EAAAxD,KAAA,gBAAAwD,EAAAzD,KAAA,EAAAyD,EAAAjD,GAAAiD,EAAA,SAQpC5D,EAAS,CACPS,KhBnCoB,agBoCpBC,QAASkD,EAAAjD,GAAIC,SAASC,OAVY,yBAAA+C,EAAA9C,SAAA4C,EAAA3C,KAAA,YAAJ,gBAAA+C,GAAA,OAAAL,EAAAxC,MAAAF,KAAAG,YAAA,KEgCrBqB,CAGb6H,IEzDIM,eACJ,SAAAA,EAAYnJ,GAAO,IAAAD,EAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAA2J,GAAA,IAETrJ,GADRC,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAAgL,GAAAlF,KAAAzE,KAAMQ,KACcA,MAAM8G,MAAMC,OAAxBjH,GAFS,OAGjBC,EAAKkC,MAAQ,CACX6F,QAAS,GACTC,mBAAoB,GACpBa,OAAQ,GACRf,SAAU,EACVuB,QAAS,GACT7I,kBAAmBT,EACnBsE,OAAQ,IAGVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAdCA,wEAgBV2E,GAKPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAGnCJ,GACPA,EAAEK,iBAEF,IAAMsE,EAAiB,CACrBvD,iBAAkBtG,KAAKyC,MAAM6D,iBAC7BgC,QAAStI,KAAKyC,MAAM6F,QACpBC,mBAAoBvI,KAAKyC,MAAM8F,mBAC/Ba,OAAQpJ,KAAKyC,MAAM2G,OACnBf,SAAUrI,KAAKyC,MAAM4F,SACrBuB,QAAS5J,KAAKyC,MAAMmH,SAItB5J,KAAKQ,MAAMsJ,eACT9J,KAAKyC,MAAM1B,kBACX8I,EACA7J,KAAKQ,MAAM/B,2DAIWuG,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,0CAG7B,IACCA,EAAW5E,KAAKyC,MAAhBmC,OACAtE,EAAON,KAAKQ,MAAM8G,MAAMC,OAAxBjH,GACR,OACEM,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAE,iBAAAC,OAAmBd,GAAMQ,UAAU,iBAA3C,yBAGAF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,4BAGAF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,oBAAb,+BACAF,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO0D,UAEvBjD,KAAK,UACLM,YAAY,uBACZL,MAAOtF,KAAKyC,MAAM6F,QAClBzD,SAAU7E,KAAK6E,WAGhBD,EAAO0D,SACN1H,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAO0D,UAG9C1H,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,YACEC,UAAU,+BACV6E,YAAY,sBACZN,KAAK,qBACLC,MAAOtF,KAAKyC,MAAM8F,mBAClB1D,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,sBACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,UACLC,MAAOtF,KAAKyC,MAAMmH,QAClB/E,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,+BACVuE,KAAK,WACLC,MAAOtF,KAAKyC,MAAM4F,SAClBxD,SAAU7E,KAAK6E,UAEfjE,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,mBACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,QACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,UACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,SAIJ1E,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,+BACVuE,KAAK,SACLC,MAAOtF,KAAKyC,MAAM2G,OAClBvE,SAAU7E,KAAK6E,UAEfjE,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,IAAd,iBACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,SAAd,SACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,eAAd,eACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,QAAd,UAIJ1E,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,SACLoB,UAAU,+CAnICS,aAwJdC,eAJS,SAAAiB,GAAK,MAAK,CAChCmC,OAAQnC,EAAMmC,SAKd,CAAEkF,eJxJ0B,SAC5B9B,EACA+B,EACAtL,GAH4B,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIzB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEKC,IAAMC,KAAN,gBAAA6B,OAA2B4G,GAAc+B,GAF9C,OAGDtL,EAAQgB,KAAR,iBAAA2B,OAA8B4G,IAC9B/I,EAAS,CACPS,KhBfoB,agBgBpBC,QAAS,KANVR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SASDF,EAAS,CACPS,KhBpBoB,agBqBpBC,QAASR,EAAAS,GAAIC,SAASC,OAXvB,yBAAAX,EAAAY,SAAAf,EAAAgB,KAAA,YAJyB,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,KIsJfqB,CAGbmI,ICxJIK,eACJ,SAAAA,IAAc,IAAAzJ,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAAgK,IACZzJ,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAAqL,GAAAvF,KAAAzE,QAEKyC,MAAQ,CACXnC,GAAI,GACJgG,iBAAkB,GAClBgC,QAAS,GACTC,mBAAoB,GACpBa,OAAQ,GACRf,SAAU,GACVuB,QAAS,GACT7I,kBAAmB,GACnBkJ,UAAW,GACXrF,OAAQ,IAEVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAhBJA,mFAmBM,IAAA2J,EACYlK,KAAKQ,MAAM8G,MAAMC,OAAvCS,EADUkC,EACVlC,WAAYC,EADFiC,EACEjC,MACpBjI,KAAKQ,MAAM2J,eAAenC,EAAYC,EAAOjI,KAAKQ,MAAM/B,2DAGhCuG,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,SAFD,IAAAwF,EAe/BpF,EAAUc,aATZxF,EANiC8J,EAMjC9J,GACAgG,EAPiC8D,EAOjC9D,iBACAgC,EARiC8B,EAQjC9B,QACAC,EATiC6B,EASjC7B,mBACAa,EAViCgB,EAUjChB,OACAf,EAXiC+B,EAWjC/B,SACAuB,EAZiCQ,EAYjCR,QACA7I,EAbiCqJ,EAajCrJ,kBACAkJ,EAdiCG,EAcjCH,UAGFjK,KAAKiF,SAAS,CACZ3E,KACAgG,mBACAgC,UACAC,qBACAa,SACAf,WACAuB,UACA7I,oBACAkJ,+CAIK/E,GACPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,QAC1C5E,QAAQC,IAAIuE,oCAGLA,GACPA,EAAEK,iBAEF,IAAMyE,EAAoB,CACxB1J,GAAIN,KAAKyC,MAAMnC,GACfgG,iBAAkBtG,KAAKyC,MAAM6D,iBAC7BgC,QAAStI,KAAKyC,MAAM6F,QACpBC,mBAAoBvI,KAAKyC,MAAM8F,mBAC/Ba,OAAQpJ,KAAKyC,MAAM2G,OACnBf,SAAUrI,KAAKyC,MAAM4F,SACrBuB,QAAS5J,KAAKyC,MAAMmH,QACpB7I,kBAAmBf,KAAKyC,MAAM1B,kBAC9BkJ,UAAWjK,KAAKyC,MAAMwH,WAGxBvJ,QAAQC,IAAIqJ,GACZhK,KAAKQ,MAAM6J,kBACTrK,KAAKyC,MAAM1B,kBACXf,KAAKyC,MAAM6D,iBACX0D,EACAhK,KAAKQ,MAAM/B,0CAIN,IACCmG,EAAW5E,KAAKyC,MAAhBmC,OACR,OACEhE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CACEC,GAAE,iBAAAC,OAAmBpB,KAAKyC,MAAM1B,mBAChCD,UAAU,iBAFZ,yBAMAF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,uBACAF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,oBAAb,iBACiBd,KAAKyC,MAAM1B,kBAD5B,sBACkE,IAC/Df,KAAKyC,MAAM6D,iBAAkB,KAEhC1F,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAW2E,IAAW,+BAAgC,CACpDC,aAAcd,EAAO0D,UAEvBjD,KAAK,UACLM,YAAY,uBACZL,MAAOtF,KAAKyC,MAAM6F,QAClBzD,SAAU7E,KAAK6E,WAEhBD,EAAO0D,SACN1H,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAO0D,UAG9C1H,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,YACEC,UAAU,+BACV6E,YAAY,sBACZN,KAAK,qBACLC,MAAOtF,KAAKyC,MAAM8F,mBAClB1D,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,sBACAD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAU,+BACVuE,KAAK,UACLC,MAAOtF,KAAKyC,MAAMmH,QAClB/E,SAAU7E,KAAK6E,YAGnBjE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,+BACVuE,KAAK,WACLC,MAAOtF,KAAKyC,MAAM4F,SAClBxD,SAAU7E,KAAK6E,UAEfjE,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,mBACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,QACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,UACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAO,GAAf,SAIJ1E,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,UACEC,UAAU,+BACVuE,KAAK,SACLC,MAAOtF,KAAKyC,MAAM2G,OAClBvE,SAAU7E,KAAK6E,UAEfjE,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,IAAd,iBACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,SAAd,SACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,eAAd,eACA1E,EAAA9B,EAAA+B,cAAA,UAAQyE,MAAM,QAAd,UAIJ1E,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,SACLoB,UAAU,+CAvKIS,aA8LjBC,eALS,SAAAiB,GAAK,MAAK,CAChCqD,aAAcrD,EAAM4D,QAAQP,aAC5BlB,OAAQnC,EAAMmC,SAKd,CAAEuF,eL9J0B,SAC5BnC,EACAC,EACAxJ,GAH4B,sBAAAkJ,EAAAhJ,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAIzB,SAAA6I,EAAM3I,GAAN,IAAA2D,EAAA,OAAA/D,EAAAC,EAAAI,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,cAAAwI,EAAAzI,KAAA,EAAAyI,EAAAxI,KAAA,EAEiBC,IAAMwD,IAAN,gBAAA1B,OAA0B4G,EAA1B,KAAA5G,OAAwC6G,IAFzD,OAEKrF,EAFLiF,EAAArI,KAGDP,EAAS,CACPS,KhBlC0B,mBgBmC1BC,QAASiD,EAAI9C,OALd+H,EAAAxI,KAAA,gBAAAwI,EAAAzI,KAAA,EAAAyI,EAAAjI,GAAAiI,EAAA,SAQDpJ,EAAQgB,KAAK,cARZ,yBAAAoI,EAAA9H,SAAA6H,EAAA5H,KAAA,YAJyB,gBAAA8H,GAAA,OAAAH,EAAAzH,MAAAF,KAAAG,YAAA,IK8JVkK,kBL9Ia,SAC/BrC,EACAC,EACAnC,EACArH,GAJ+B,sBAAAgD,EAAA9C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAK5B,SAAA2C,EAAMzC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAEKC,IAAMgL,MAAN,gBAAAlJ,OAA4B4G,EAA5B,KAAA5G,OAA0C6G,GAASnC,GAFxD,OAGDrH,EAAQgB,KAAR,iBAAA2B,OAA8B4G,IAC9B/I,EAAS,CACPS,KhBnEoB,agBoEpBC,QAAS,KANVgC,EAAAtC,KAAA,gBAAAsC,EAAAvC,KAAA,EAAAuC,EAAA/B,GAAA+B,EAAA,SASD1C,EAAS,CACPS,KhBxEoB,agByEpBC,QAASgC,EAAA/B,GAAIC,SAASC,OAXvB,yBAAA6B,EAAA5B,SAAA2B,EAAA1B,KAAA,YAL4B,gBAAA+B,GAAA,OAAAN,EAAAvB,MAAAF,KAAAG,YAAA,KK4IlBqB,CAGbwI,ICtMIO,+LAEEvK,KAAKQ,MAAMqD,SAASC,YACtB9D,KAAKQ,MAAM/B,QAAQgB,KAAK,+CAI1B,OACEmB,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,WACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,yCACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,yBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,kBAAd,yBACAF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,QAAb,gEAGAF,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAG,UAAUL,UAAU,+BAA7B,WAGAF,EAAA9B,EAAA+B,cAACK,EAAA,EAAD,CAAMC,GAAG,SAASL,UAAU,iCAA5B,qBArBMS,aAwCPC,eAJS,SAAAiB,GAAK,MAAK,CAChCoB,SAAUpB,EAAMoB,WAGHrC,CAAyB+I,ICtClCC,eACJ,SAAAA,IAAc,IAAAjK,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAAwK,IACZjK,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAA6L,GAAA/F,KAAAzE,QAEKyC,MAAQ,CACXwB,SAAU,GACVwG,SAAU,GACVC,SAAU,GACVC,gBAAiB,GACjB/F,OAAQ,IAEVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAXJA,wEAcL2E,GACPA,EAAEK,iBACF,IAAMqF,EAAU,CACd3G,SAAUjE,KAAKyC,MAAMwB,SACrBwG,SAAUzK,KAAKyC,MAAMgI,SACrBC,SAAU1K,KAAKyC,MAAMiI,SACrBC,gBAAiB3K,KAAKyC,MAAMkI,iBAG9B3K,KAAKQ,MAAMqK,cAAcD,EAAS5K,KAAKQ,MAAM/B,0CAGtCyG,GACPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,oDAItCtF,KAAKQ,MAAMqD,SAASC,YACtB9D,KAAKQ,MAAM/B,QAAQgB,KAAK,gEAIFuF,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,0CAI7B,IACCA,EAAW5E,KAAKyC,MAAhBmC,OACR,OACEhE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,YACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,WACAF,EAAA9B,EAAA+B,cAAA,KAAGC,UAAU,oBAAb,uBACAF,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,OACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO6F,WAEvB9E,YAAY,YACZN,KAAK,WACLC,MAAOtF,KAAKyC,MAAMgI,SAClB5F,SAAU7E,KAAK6E,WAEhBD,EAAO6F,UACN7J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAO6F,WAG9C7J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,QACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAOX,WAEvB0B,YAAY,gBACZN,KAAK,WACLC,MAAOtF,KAAKyC,MAAMwB,SAClBY,SAAU7E,KAAK6E,WAEhBD,EAAOX,UACNrD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAOX,WAG9CrD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,WACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO8F,WAEvB/E,YAAY,WACZN,KAAK,WACLC,MAAOtF,KAAKyC,MAAMiI,SAClB7F,SAAU7E,KAAK6E,WAEhBD,EAAO8F,UACN9J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAO8F,WAG9C9J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,WACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO+F,kBAEvBhF,YAAY,mBACZN,KAAK,kBACLC,MAAOtF,KAAKyC,MAAMkI,gBAClB9F,SAAU7E,KAAK6E,WAEhBD,EAAO+F,iBACN/J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBACZ8D,EAAO+F,kBAId/J,EAAA9B,EAAA+B,cAAA,SAAOnB,KAAK,SAASoB,UAAU,4CAnHxBS,aAuIRC,eAJS,SAAAiB,GAAK,MAAK,CAChCmC,OAAQnC,EAAMmC,OACdf,SAAUpB,EAAMoB,WAIhB,CAAEgH,clB1IyB,SAACD,EAASnM,GAAV,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAsB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEzCC,IAAMC,KAAK,sBAAuBqL,GAFO,OAG/CnM,EAAQgB,KAAK,UACbR,EAAS,CACPS,KLRoB,aKSpBC,QAAS,KANoCR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAS/CF,EAAS,CACPS,KLboB,aKcpBC,QAASR,EAAAS,GAAIC,SAASC,OAXuB,yBAAAX,EAAAY,SAAAf,EAAAgB,KAAA,YAAtB,gBAAAC,GAAA,OAAAvB,EAAAwB,MAAAF,KAAAG,YAAA,KkBwIdqB,CAGbgJ,IC1IIM,eACJ,SAAAA,IAAc,IAAAvK,EAAA,OAAA5B,OAAA2F,EAAA,EAAA3F,CAAAqB,KAAA8K,IACZvK,EAAA5B,OAAA4F,EAAA,EAAA5F,CAAAqB,KAAArB,OAAA6F,EAAA,EAAA7F,CAAAmM,GAAArG,KAAAzE,QACKyC,MAAQ,CACXwB,SAAU,GACVyG,SAAU,GACV9F,OAAQ,IAEVrE,EAAKsE,SAAWtE,EAAKsE,SAASvD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KAChBA,EAAKwE,SAAWxE,EAAKwE,SAASzD,KAAd3C,OAAAmG,EAAA,EAAAnG,QAAAmG,EAAA,EAAAnG,CAAA4B,KARJA,wEAWL2E,GACPA,EAAEK,iBACF,IAAMwF,EAAe,CACnB9G,SAAUjE,KAAKyC,MAAMwB,SACrByG,SAAU1K,KAAKyC,MAAMiI,UAGvB1K,KAAKQ,MAAMwK,UAAUD,EAAc/K,KAAKQ,MAAM/B,0CAEvCyG,GACPlF,KAAKiF,SAALtG,OAAAwG,EAAA,EAAAxG,CAAA,GAAiBuG,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,oDAItCtF,KAAKQ,MAAMqD,SAASC,YACtB9D,KAAKQ,MAAM/B,QAAQgB,KAAK,gEAGFuF,GACpBA,EAAUJ,QACZ5E,KAAKiF,SAAS,CAAEL,OAAQI,EAAUJ,SAGhCI,EAAUnB,SAASC,YACrB9D,KAAKQ,MAAM/B,QAAQgB,KAAK,+CAGnB,IACCmF,EAAW5E,KAAKyC,MAAhBmC,OACR,OACEhE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,SACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,aACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,mBACbF,EAAA9B,EAAA+B,cAAA,MAAIC,UAAU,yBAAd,UACAF,EAAA9B,EAAA+B,cAAA,QAAMkE,SAAU/E,KAAK+E,UACnBnE,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,QACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAOX,WAEvB0B,YAAY,gBACZN,KAAK,WACLC,MAAOtF,KAAKyC,MAAMwB,SAClBY,SAAU7E,KAAK6E,WAEhBD,EAAOX,UACNrD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAOX,WAG9CrD,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,cACbF,EAAA9B,EAAA+B,cAAA,SACEnB,KAAK,WACLoB,UAAW2E,IAAW,gCAAiC,CACrDC,aAAcd,EAAO8F,WAEvB/E,YAAY,WACZN,KAAK,WACLC,MAAOtF,KAAKyC,MAAMiI,SAClB7F,SAAU7E,KAAK6E,WAEhBD,EAAO8F,UACN9J,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,oBAAoB8D,EAAO8F,WAG9C9J,EAAA9B,EAAA+B,cAAA,SAAOnB,KAAK,SAASoB,UAAU,4CA9E3BS,aAkGLC,eALS,SAAAiB,GAAK,MAAK,CAChCoB,SAAUpB,EAAMoB,SAChBe,OAAQnC,EAAMmC,SAKd,CAAEoG,UnBrFqB,SAACD,EAActM,GAAf,sBAAAiE,EAAA/D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA2B,SAAA4D,EAAM1D,GAAN,IAAA2D,EAAAK,EAAAgI,EAAA,OAAApM,EAAAC,EAAAI,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAG9BC,IAAMC,KAAK,mBAAoBwL,GAHD,OAG1CnI,EAH0CC,EAAArD,KAKxCyD,EAAUL,EAAI9C,KAAdmD,MAERK,aAAa4H,QAAQ,WAAYjI,GAEjCD,EAAYC,GAENgI,EAAUE,IAAWlI,GAE3BhE,EAAS,CACPS,KLd0B,mBKe1BC,QAASsL,IAfqCpI,EAAAxD,KAAA,iBAAAwD,EAAAzD,KAAA,GAAAyD,EAAAjD,GAAAiD,EAAA,SAkBhD5D,EAAS,CACPS,KLtCoB,aKuCpBC,QAASkD,EAAAjD,GAAIC,SAASC,OApBwB,yBAAA+C,EAAA9C,SAAA4C,EAAA3C,KAAA,aAA3B,gBAAA+C,GAAA,OAAAL,EAAAxC,MAAAF,KAAAG,YAAA,KmBmFVqB,CAGbsJ,sBClFatJ,eAJS,SAAAiB,GAAK,MAAK,CAChCoB,SAAUpB,EAAMoB,WAGHrC,CArBM,SAAA9C,GAAA,IAAc6C,EAAd7C,EAAG0M,UAAsBvH,EAAzBnF,EAAyBmF,SAAawH,EAAtC1M,OAAA2M,GAAA,EAAA3M,CAAAD,EAAA,iCACnBkC,EAAA9B,EAAA+B,cAAC0K,EAAA,EAAD5M,OAAA6M,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAAjL,GAAK,OACa,IAAxBqD,EAASC,WACPlD,EAAA9B,EAAA+B,cAACU,EAAcf,GAEfI,EAAA9B,EAAA+B,cAAC6K,GAAA,EAAD,CAAUvK,GAAG,iBCYfwK,GAAWrI,aAAaqI,SAE9B,GAAIA,GAAU,CACZ3I,EAAY2I,IACZ,IAAMC,GAAmBT,IAAWQ,IACpC/E,EAAM3H,SAAS,CACbS,K1BR4B,mB0BS5BC,QAASiM,KAGX,IAAMC,GAAcC,KAAKC,MAAQ,IAC7BH,GAAiBI,IAAMH,KAEzBjF,EAAM3H,SAASoE,KACfzB,OAAO6B,SAASC,KAAO,SAsDZuI,oLAhDX,OAEErL,EAAA9B,EAAA+B,cAACqL,EAAA,EAAD,CAAUtF,MAAOA,GACfhG,EAAA9B,EAAA+B,cAACsL,EAAA,EAAD,KACEvL,EAAA9B,EAAA+B,cAAA,OAAKC,UAAU,OACbF,EAAA9B,EAAA+B,cAACuL,EAAD,MAKAxL,EAAA9B,EAAA+B,cAAC0K,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,IAAIlB,UAAWb,KACjC3J,EAAA9B,EAAA+B,cAAC0K,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,UAAUlB,UAAWZ,KACvC5J,EAAA9B,EAAA+B,cAAC0K,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,SAASlB,UAAWN,KAKtClK,EAAA9B,EAAA+B,cAAC0L,EAAA,EAAD,KACE3L,EAAA9B,EAAA+B,cAAC2L,GAAD,CAAcH,OAAK,EAACC,KAAK,aAAalB,UAAWlJ,IACjDtB,EAAA9B,EAAA+B,cAAC2L,GAAD,CAAcH,OAAK,EAACC,KAAK,cAAclB,UAAW/G,IAClDzD,EAAA9B,EAAA+B,cAAC2L,GAAD,CACEH,OAAK,EACLC,KAAK,qBACLlB,UAAWhE,IAEbxG,EAAA9B,EAAA+B,cAAC2L,GAAD,CACEH,OAAK,EACLC,KAAK,oBACLlB,UAAW/B,KAEbzI,EAAA9B,EAAA+B,cAAC2L,GAAD,CACEH,OAAK,EACLC,KAAK,sBACLlB,UAAWzB,KAEb/I,EAAA9B,EAAA+B,cAAC2L,GAAD,CACEH,OAAK,EACLC,KAAK,wCACLlB,UAAWpB,gBAxCTzI,aC9BEkL,QACW,cAA7B7K,OAAO6B,SAASiJ,UAEe,UAA7B9K,OAAO6B,SAASiJ,UAEhB9K,OAAO6B,SAASiJ,SAASpF,MACvB,2DCZNqF,IAASlB,OAAO7K,EAAA9B,EAAA+B,cAAC+L,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBjG,WACrBA,UAAUkG,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a051c786.chunk.js","sourcesContent":["//talking with the backend\r\nimport axios from \"axios\";\r\n//import the types of actions\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\n//get projects\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n//get project\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\n//delete project\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure want to delete this?\")) {\r\n    const res = await axios.delete(`/api/project/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","//Type of actions we will be working with.\r\n//We will first work with GET ERROR action from spring boot\r\n\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\n\r\n//to get project\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\n\r\n//to update project\r\n\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\n\r\n//to delete project\r\n\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//For Project Task\r\n\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    console.log(project);\r\n    return (\r\n      // Project Item Component\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // End of Project Item Component\r\n  }\r\n}\r\nProjectItem.propTypes = { deleteProject: PropTypes.func.isRequired };\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","//rcc helps you create class based component\r\n\r\nimport React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Tell react this function is required to connect\r\nDashboard.propTypes = {\r\n  getProjects: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getProjects\r\n  }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../components/securityUtils/setJWTToken\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const loginUser = (Loginrequest, history) => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", Loginrequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.username}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/signup\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      // NavBar Component Code\r\n\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    //long way\r\n    //this.setState( { projectName: e.target.value ,projectIdentifier:e.target.value});\r\n\r\n    //short way\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      //using classnames,if no error then default class,\r\n                      //otherwise error.projectName!=null, then class is-invalid is used\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {/* <p>{errors.projectName}</p>\r\n\r\n                    For div class used Emment i.e. div.invald-feedback shorcut*/}\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Tell react this function is required to connect\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n  errors: state.errors\r\n});\r\n//connect -connect state to component property\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { createProject }\r\n)(AddProject);\r\n","//This file is called when we get error from the spring boot server.\r\nimport { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload //single item(project not the list of projects)\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSeqeuence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {}\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducers from \"./errorReducers\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  //Combine the error with main reducer\r\n  errors: errorReducers,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst intialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nlet REDUX_DEVTOOL =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && REDUX_DEVTOOL) {\r\n  store = createStore(\r\n    rootReducer,\r\n    intialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      REDUX_DEVTOOL\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    intialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  //life cycle hook\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      //using classnames,if no error then default class,\r\n                      //otherwise error.projectName!=null, then class is-invalid is used\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {/* <p>{errors.projectName}</p>\r\n\r\n                    For div class used Emment i.e. div.invald-feedback shorcut*/}\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                      disabled\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Tell react this function is required to connect\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n//connect -connect state to component property\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority == 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority == 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    if (project_task.priority == 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSeqeuence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSeqeuence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSeqeuence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\n//import the types of actions\r\nimport {\r\n  GET_ERRORS,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n  GET_BACKLOG\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  projectTask,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, projectTask);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\n//delete project\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`Are you sure want to delete ${pt_id} project task?`)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_task_prop } = this.props;\r\n\r\n    const tasks = project_task_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let toDoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status == \"TO_DO\") {\r\n        toDoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status == \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status == \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {toDoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { BoardAlgo } from \"../ProjectBoard/BoardAlgo\";\r\nimport classnames from \"classnames\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    BoardContent = BoardAlgo(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//Tell react this function is required to connect\r\nProjectBoard.propTypes = {\r\n  getBacklog: PropTypes.func.isRequired,\r\n  backlog: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n//connect -connect state to component property\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport Backlog from \"./Backlog\";\r\n\r\nexport const BoardAlgo = (errors, project_tasks) => {\r\n  if (project_tasks.length < 1) {\r\n    if (errors.projectIdentifier) {\r\n      return (\r\n        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n          {errors.projectIdentifier}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n          No Project Tasks on this board\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return <Backlog project_task_prop={project_tasks} />;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    //long way\r\n    //this.setState( { projectName: e.target.value ,projectIdentifier:e.target.value});\r\n\r\n    //short way\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newProjectTask = {\r\n      projectSeqeuence: this.state.projectSeqeuence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n    //console.log(this.state.projectIdentifier);\r\n    //console.log(newProjectTask);\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    const { id } = this.props.match.params;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add /Update Project Task\r\n              </h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Tell react this function is required to connect\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n  errors: state.errors\r\n});\r\n//connect -connect state to component property\r\nexport default connect(\r\n  mapStatetoProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSeqeuence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSeqeuence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSeqeuence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSeqeuence: this.state.projectSeqeuence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSeqeuence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSeqeuence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Personal Project Tool</h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //life cycle hooks\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/securityActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const Loginrequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.loginUser(Loginrequest, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\n\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./components/securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./components/securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout , store is redux store\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      //Provider uses a prop i.e store\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public route\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/signup\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Route\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}